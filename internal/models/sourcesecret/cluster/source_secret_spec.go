// © Broadcom. All Rights Reserved.
// The term “Broadcom” refers to Broadcom Inc. and/or its subsidiaries.
// SPDX-License-Identifier: MPL-2.0

package clustersourcesecret

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// VmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretSpec Spec of the Source Secret.
//
// swagger:model vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.Spec
type VmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretSpec struct {

	// Data is the source credential in the form of key-value.
	Data *VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpec `json:"data,omitempty"`

	// Type of Source Secret(username-password or SSH).
	SourceSecretType *VmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretType `json:"sourceSecretType,omitempty"`
}

// MarshalBinary interface implementation.
func (m *VmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}

	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation.
func (m *VmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretSpec) UnmarshalBinary(b []byte) error {
	var res VmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}

	*m = res

	return nil
}

// VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpec KeyValue Type credential stored in Account Manager.
//
// swagger:model vmware.tanzu.manage.v1alpha1.account.credential.type.keyvalue.Spec
type VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpec struct {

	// Data contains the secret data. Each key must consist of alphanumeric
	// characters, '-', '_' or '.'.
	Data map[string]strfmt.Base64 `json:"data,omitempty"`

	// Type of Secret.
	// The default value is SECRET_TYPE_OPAQUE.
	Type *VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpecSecretType `json:"type,omitempty"`
}

// MarshalBinary interface implementation.
func (m *VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}

	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation.
func (m *VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpec) UnmarshalBinary(b []byte) error {
	var res VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}

	*m = res

	return nil
}

// VmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretType Source Secret Type represents the type of the secret.
//
//   - UNSPECIFIED: Unspecified type for forward compatibility.
//   - USERNAME_PASSWORD: Username Password type.
//   - SSH: SSH type.
//
// swagger:model vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.SourceSecretType
type VmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretType string

func NewVmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretType(value VmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretType) *VmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretType {
	return &value
}

const (

	// VmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretTypeUNSPECIFIED captures enum value "UNSPECIFIED".
	VmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretTypeUNSPECIFIED VmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretType = "UNSPECIFIED"

	// VmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretTypeUSERNAMEPASSWORD captures enum value "USERNAME_PASSWORD".
	VmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretTypeUSERNAMEPASSWORD VmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretType = "USERNAME_PASSWORD"

	// VmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretTypeSSH captures enum value "SSH".
	VmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretTypeSSH VmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretType = "SSH"
)

// for schema.
var vmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretTypeEnum []interface{}

func init() {
	var res []VmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretType
	if err := json.Unmarshal([]byte(`["UNSPECIFIED","USERNAME_PASSWORD","SSH"]`), &res); err != nil {
		panic(err)
	}

	for _, v := range res {
		vmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretTypeEnum = append(vmwareTanzuManageV1alpha1ClusterFluxcdSourcesecretTypeEnum, v)
	}
}

// VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpecSecretType Type of Secret.
//
//   - SECRET_TYPE_UNSPECIFIED: SECRET_TYPE_UNSPECIFIED is default.
//   - OPAQUE_SECRET_TYPE: SECRET_TYPE_OPAQUE maps to the k8s secret type OPAQUE.
//
// It is arbitrary user-defined data.
//   - DOCKERCONFIGJSON_SECRET_TYPE: DOCKERCONFIGJSON_SECRET_TYPE maps to  Kubernetes secrets type kubernetes.io/dockerconfigjson.
//
// swagger:model vmware.tanzu.manage.v1alpha1.account.credential.type.keyvalue.Spec.SecretType
type VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpecSecretType string

func NewVmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpecSecretType(value VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpecSecretType) *VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpecSecretType {
	return &value
}

// nolint: gosec
const (

	// VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpecSecretTypeSECRETTYPEUNSPECIFIED captures enum value "SECRET_TYPE_UNSPECIFIED".
	VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpecSecretTypeSECRETTYPEUNSPECIFIED VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpecSecretType = "SECRET_TYPE_UNSPECIFIED"

	// VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpecSecretTypeOPAQUESECRETTYPE captures enum value "OPAQUE_SECRET_TYPE".
	VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpecSecretTypeOPAQUESECRETTYPE VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpecSecretType = "OPAQUE_SECRET_TYPE"

	// VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpecSecretTypeDOCKERCONFIGJSONSECRETTYPE captures enum value "DOCKERCONFIGJSON_SECRET_TYPE".
	VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpecSecretTypeDOCKERCONFIGJSONSECRETTYPE VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpecSecretType = "DOCKERCONFIGJSON_SECRET_TYPE"
)

// for schema.
var vmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpecSecretTypeEnum []interface{}

func init() {
	var res []VmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpecSecretType
	if err := json.Unmarshal([]byte(`["SECRET_TYPE_UNSPECIFIED","OPAQUE_SECRET_TYPE","DOCKERCONFIGJSON_SECRET_TYPE"]`), &res); err != nil {
		panic(err)
	}

	for _, v := range res {
		vmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpecSecretTypeEnum = append(vmwareTanzuManageV1alpha1AccountCredentialTypeKeyvalueSpecSecretTypeEnum, v)
	}
}
