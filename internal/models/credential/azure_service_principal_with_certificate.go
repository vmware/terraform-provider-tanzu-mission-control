// © Broadcom. All Rights Reserved.
// The term “Broadcom” refers to Broadcom Inc. and/or its subsidiaries.
// SPDX-License-Identifier: MPL-2.0

// Code generated by go-swagger; DO NOT EDIT.

package credentialmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// VmwareTanzuManageV1alpha1AccountCredentialTypeAzureServicePrincipalWithCertificate Azure Service Principal with client certificate.
//
// swagger:model vmware.tanzu.manage.v1alpha1.account.credential.type.azure.ServicePrincipalWithCertificate
type VmwareTanzuManageV1alpha1AccountCredentialTypeAzureServicePrincipalWithCertificate struct {

	// Azure Cloud name.
	AzureCloudName string `json:"azureCloudName,omitempty"`

	// Client certificate of the Service Principal.
	ClientCertificate string `json:"clientCertificate,omitempty"`

	// Client ID of the Service Principal.
	ClientID string `json:"clientId,omitempty"`

	// IDs of the Azure Subscriptions that the Service Principal can manage.
	ManagedSubscriptions []string `json:"managedSubscriptions"`

	// Subscription ID of the Azure credential.
	SubscriptionID string `json:"subscriptionId,omitempty"`

	// Tenant ID of the Azure credential.
	TenantID string `json:"tenantId,omitempty"`
}

// Validate validates this vmware tanzu manage v1alpha1 account credential type azure service principal with certificate
func (m *VmwareTanzuManageV1alpha1AccountCredentialTypeAzureServicePrincipalWithCertificate) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this vmware tanzu manage v1alpha1 account credential type azure service principal with certificate based on context it is used
func (m *VmwareTanzuManageV1alpha1AccountCredentialTypeAzureServicePrincipalWithCertificate) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VmwareTanzuManageV1alpha1AccountCredentialTypeAzureServicePrincipalWithCertificate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VmwareTanzuManageV1alpha1AccountCredentialTypeAzureServicePrincipalWithCertificate) UnmarshalBinary(b []byte) error {
	var res VmwareTanzuManageV1alpha1AccountCredentialTypeAzureServicePrincipalWithCertificate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
