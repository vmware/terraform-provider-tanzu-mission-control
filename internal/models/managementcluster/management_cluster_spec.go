// © Broadcom. All Rights Reserved.
// The term “Broadcom” refers to Broadcom Inc. and/or its subsidiaries.
// SPDX-License-Identifier: MPL-2.0

// Code generated by go-swagger; DO NOT EDIT.

package managementclustermodel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/swag"

	clustermodel "github.com/vmware/terraform-provider-tanzu-mission-control/internal/models/cluster"
)

// VmwareTanzuManageV1alpha1ManagementclusterSpec The ManagementCluster spec.
//
// swagger:model vmware.tanzu.manage.v1alpha1.managementcluster.Spec
type VmwareTanzuManageV1alpha1ManagementclusterSpec struct {

	// Default cluster group for workload clusters.
	DefaultClusterGroup string `json:"defaultClusterGroup,omitempty"`

	// Optional default workload cluster image registry is the
	// name of the Image Registry Config to be used for workload clusters.
	// If set empty, no image registry config will be used.
	// If set non-empty, defined image registry config will be used.
	// If left unset, management cluster's image registry config will be used.
	DefaultWorkloadClusterImageRegistry string `json:"defaultWorkloadClusterImageRegistry,omitempty"`

	// Optional default workload clusters proxy name is the
	// Proxy Config to be used for workload clusters.
	DefaultWorkloadClusterProxyName string `json:"defaultWorkloadClusterProxyName,omitempty"`

	// Optional image registry is the name of the Image Registry Config
	// to be used for the management cluster.
	ImageRegistry string `json:"imageRegistry,omitempty"`

	// Kubernetes Provider Type of user's choice for registration.
	KubernetesProviderType *clustermodel.VmwareTanzuManageV1alpha1CommonClusterKubernetesProviderType `json:"kubernetesProviderType,omitempty"`

	// Optional proxy name is the name of the Proxy Config
	// to be used for the management cluster.
	ProxyName string `json:"proxyName,omitempty"`
}

// MarshalBinary interface implementation
func (m *VmwareTanzuManageV1alpha1ManagementclusterSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VmwareTanzuManageV1alpha1ManagementclusterSpec) UnmarshalBinary(b []byte) error {
	var res VmwareTanzuManageV1alpha1ManagementclusterSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
